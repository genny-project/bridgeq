%dev.quarkus.http.port=8092
# Configuration file
# key = value
#quarkus.vertx.cluster.clustered=true
#quarkus.vertx.cluster.host=${MYIP}
#quarkus.vertx.cluster.public-host=${MYIP}
#quarkus.vertx.eventbus.trust-all=true
http.port = 8080
quarkus.http.port = ${PORT:${http.port}}

%test.quarkus.oidc.auth-server-url=http://127.0.0.1:8180/auth/realms/quarkus
quarkus.oidc.auth-server-url=${KEYCLOAK_AUTH_URL:https://keycloak.gada.io/auth/realms/internmatch}
quarkus.oidc.client-id=${KEYCLOAK_CLIENT_ID:internmatch}
quarkus.oidc.credentials.secret=${KEYCLOAK_SECRET:dc7d0960-2e1d-4a78-9eef-77678066dbd3}


quarkus.http.cors=true
#quarkus.vertx.cluster.port=15701
#quarkus.vertx.cluster.public-port=15701

kafka.bootstrap.servers=${KAFKA_URL:kafka:9092}      
#quarkus.kafka.bootstrap-servers=192.168.17.116:9092

kafka.max.request.size=1000000000
max.partition.fetch.bytes=100000000

# Kafka outgoing (topic = kafka)
mp.messaging.incoming.events.connector=smallrye-kafka
mp.messaging.incoming.events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.eventsout.connector=smallrye-kafka
mp.messaging.outgoing.eventsout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.eventsout.topic=events

mp.messaging.incoming.data.connector=smallrye-kafka
mp.messaging.incoming.data.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.dataout.connector=smallrye-kafka
mp.messaging.outgoing.dataout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.dataout.topic=data

mp.messaging.incoming.webdata.connector=smallrye-kafka
mp.messaging.incoming.webdata.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.webdataout.connector=smallrye-kafka
mp.messaging.outgoing.webdataout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.webdataout.topic=webdata

mp.messaging.incoming.webcmds.connector=smallrye-kafka
mp.messaging.incoming.webcmds.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.webcmdsout.connector=smallrye-kafka
mp.messaging.outgoing.webcmdsout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.webcmdsout.topic=webcmds

mp.messaging.incoming.cmds.connector=smallrye-kafka
mp.messaging.incoming.cmds.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.cmdsout.connector=smallrye-kafka
mp.messaging.outgoing.cmdsout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.cmdsout.topic=cmds

mp.messaging.incoming.social.connector=smallrye-kafka
mp.messaging.incoming.social.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.socialout.connector=smallrye-kafka
mp.messaging.outgoing.socialout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.socialout.topic=social

mp.messaging.incoming.signals.connector=smallrye-kafka
mp.messaging.incoming.signals.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.signalsout.connector=smallrye-kafka
mp.messaging.outgoing.signalsout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.signalsout.topic=signals

mp.messaging.incoming.statefulmessages.connector=smallrye-kafka
mp.messaging.incoming.statefulmessages.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.statefulmessagesout.connector=smallrye-kafka
mp.messaging.outgoing.statefulmessagesout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.statefulmessagesout.topic=statefulmessages

mp.messaging.incoming.health.connector=smallrye-kafka
mp.messaging.incoming.health.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.healthout.connector=smallrye-kafka
mp.messaging.outgoing.healthout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.healthout.topic=health

mp.messaging.incoming.messages.connector=smallrye-kafka
mp.messaging.incoming.messages.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.messagesout.connector=smallrye-kafka
mp.messaging.outgoing.messagesout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.messagesout.topic=messages

mp.messaging.incoming.services.connector=smallrye-kafka
mp.messaging.incoming.services.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.servicesout.connector=smallrye-kafka
mp.messaging.outgoing.servicesout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.servicesout.topic=services

mp.messaging.outgoing.answerout.connector=smallrye-kafka
mp.messaging.outgoing.answerout.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.answerout.topic=answer


# Your configuration properties
life.genny.bridge.VirtualChannelServices/mp-rest/url=${RULESSERVICE_URL:http://wildfly-rulesservice:8080}
life.genny.bridge.VirtualChannelServices/mp-rest/url=${RULESSERVICE_URL:http://wildfly-rulesservice:8080}
life.genny.bridge.VirtualChannelServices/mp-rest/connectTimeout=120000
life.genny.bridge.VirtualChannelServices/mp-rest/readTimeout=120000
#org.acme.rest.client.CountriesService/mp-rest/url=https://restcountries.eu/rest # 
life.genny.bridge.VirtualChannelServices/mp-rest/scope=javax.inject.Singleton #

quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.color=false

quarkus.log.category."io.quarkus".level=DEBUG

quarkus.resteasy.gzip.enabled=true 
quarkus.resteasy.gzip.max-input=10M

quarkus.banner.path=logo.txt
